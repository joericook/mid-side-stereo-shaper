/*
  ==============================================================================

  This is an automatically generated GUI class created by the Projucer!

  Be careful when adding custom code to these files, as only the code within
  the "//[xyz]" and "//[/xyz]" sections will be retained when the file is loaded
  and re-saved.

  Created with Projucer version: 4.3.1

  ------------------------------------------------------------------------------

  The Projucer is part of the JUCE library - "Jules' Utility Class Extensions"
  Copyright (c) 2015 - ROLI Ltd.

  ==============================================================================
*/

//[Headers] You can add your own extra header files here...
#include "PluginProcessor.h"
//[/Headers]

#include "GUIComponent.h"


//[MiscUserDefs] You can add your own user definitions and misc code here...
//[/MiscUserDefs]

//==============================================================================
GUIComponent::GUIComponent (MidSideStereoShaperAudioProcessor* P)
    : processor(P)
{
    //[Constructor_pre] You can add your own custom stuff here..
	LookAndFeel::setDefaultLookAndFeel(this);

	Image imgFaderBackground = ImageCache::getFromMemory(faderBackground_png, faderBackground_pngSize);
	Image imgFaderHandle = ImageCache::getFromMemory(faderHandle_png, faderHandle_pngSize);
    //[/Constructor_pre]

    addAndMakeVisible (MidGain = new Slider ("MidGain"));
    MidGain->setRange (0, 1, 0.1);
    MidGain->setSliderStyle (Slider::LinearVertical);
    MidGain->setTextBoxStyle (Slider::TextBoxBelow, false, 40, 16);
    MidGain->addListener (this);

    addAndMakeVisible (SideGain = new Slider ("SideGain"));
    SideGain->setRange (0, 1, 0.1);
    SideGain->setSliderStyle (Slider::LinearVertical);
    SideGain->setTextBoxStyle (Slider::TextBoxBelow, false, 40, 16);
    SideGain->addListener (this);

    addAndMakeVisible (PostGain = new Slider ("PostGain"));
    PostGain->setRange (0, 1, 0.1);
    PostGain->setSliderStyle (Slider::LinearVertical);
    PostGain->setTextBoxStyle (Slider::TextBoxBelow, false, 40, 16);
    PostGain->addListener (this);

    cachedImage_guibackground_png_1 = ImageCache::getFromMemory (guibackground_png, guibackground_pngSize);

    //[UserPreSize]
    //[/UserPreSize]

    setSize (200, 250);


    //[Constructor] You can add your own custom stuff here..
	MidGain->setValue(processor->midGain);
	SideGain->setValue(processor->sideGain);
	PostGain->setValue(processor->postGain);
    //[/Constructor]
}

GUIComponent::~GUIComponent()
{
    //[Destructor_pre]. You can add your own custom destruction code here..
    //[/Destructor_pre]

    MidGain = nullptr;
    SideGain = nullptr;
    PostGain = nullptr;


    //[Destructor]. You can add your own custom destruction code here..
    //[/Destructor]
}

//==============================================================================
void GUIComponent::paint (Graphics& g)
{
    //[UserPrePaint] Add your own custom painting code here..
    //[/UserPrePaint]

    g.fillAll (Colours::white);

    g.setColour (Colours::black);
    g.drawImage (cachedImage_guibackground_png_1,
                 0, 0, 200, 250,
                 0, 0, cachedImage_guibackground_png_1.getWidth(), cachedImage_guibackground_png_1.getHeight());

    //[UserPaint] Add your own custom painting code here..
    //[/UserPaint]
}

void GUIComponent::resized()
{
    //[UserPreResize] Add your own custom resize code here..
    //[/UserPreResize]

    MidGain->setBounds (17, 46, 37, 175);
    SideGain->setBounds (62, 46, 39, 175);
    PostGain->setBounds (133, 46, 40, 175);
    //[UserResized] Add your own custom resize handling here..
    //[/UserResized]
}

void GUIComponent::sliderValueChanged (Slider* sliderThatWasMoved)
{
    //[UsersliderValueChanged_Pre]
    //[/UsersliderValueChanged_Pre]

    if (sliderThatWasMoved == MidGain)
    {
        //[UserSliderCode_MidGain] -- add your slider handling code here..
		processor->midGain = sliderThatWasMoved->getValue();
        //[/UserSliderCode_MidGain]
    }
    else if (sliderThatWasMoved == SideGain)
    {
        //[UserSliderCode_SideGain] -- add your slider handling code here..
		processor->sideGain = sliderThatWasMoved->getValue();
        //[/UserSliderCode_SideGain]
    }
    else if (sliderThatWasMoved == PostGain)
    {
        //[UserSliderCode_PostGain] -- add your slider handling code here..
		processor->postGain = sliderThatWasMoved->getValue();
        //[/UserSliderCode_PostGain]
    }

    //[UsersliderValueChanged_Post]
    //[/UsersliderValueChanged_Post]
}



//[MiscUserCode] You can add your own definitions of your custom methods or any other code here...
void GUIComponent::drawLinearSliderBackground(Graphics& g, int x, int y, int width, int height,
	float /*sliderPos*/,
	float /*minSliderPos*/,
	float /*maxSliderPos*/,
	const Slider::SliderStyle /*style*/, Slider& slider)
{
	int xOffset = (width / 2.0) - (imgFaderBackground.getWidth() / 2.0);

	g.drawImageAt(imgFaderBackground, x + xOffset, y);
}
//[/MiscUserCode]


//==============================================================================
#if 0
/*  -- Projucer information section --

    This is where the Projucer stores the metadata that describe this GUI layout, so
    make changes in here at your peril!

BEGIN_JUCER_METADATA

<JUCER_COMPONENT documentType="Component" className="GUIComponent" componentName=""
                 parentClasses="public Component, public LookAndFeel_V3" constructorParams="MidSideStereoShaperAudioProcessor* P"
                 variableInitialisers="processor(P)" snapPixels="8" snapActive="1"
                 snapShown="1" overlayOpacity="0.330" fixedSize="0" initialWidth="200"
                 initialHeight="250">
  <BACKGROUND backgroundColour="ffffffff">
    <IMAGE pos="0 0 200 250" resource="guibackground_png" opacity="1" mode="0"/>
  </BACKGROUND>
  <SLIDER name="MidGain" id="a6a150432768f361" memberName="MidGain" virtualName=""
          explicitFocusOrder="0" pos="17 46 37 175" min="0" max="1" int="0.10000000000000000555"
          style="LinearVertical" textBoxPos="TextBoxBelow" textBoxEditable="1"
          textBoxWidth="40" textBoxHeight="16" skewFactor="1" needsCallback="1"/>
  <SLIDER name="SideGain" id="7d8e5d8599a2f928" memberName="SideGain" virtualName=""
          explicitFocusOrder="0" pos="62 46 39 175" min="0" max="1" int="0.10000000000000000555"
          style="LinearVertical" textBoxPos="TextBoxBelow" textBoxEditable="1"
          textBoxWidth="40" textBoxHeight="16" skewFactor="1" needsCallback="1"/>
  <SLIDER name="PostGain" id="46a91f338488f585" memberName="PostGain" virtualName=""
          explicitFocusOrder="0" pos="133 46 40 175" min="0" max="1" int="0.10000000000000000555"
          style="LinearVertical" textBoxPos="TextBoxBelow" textBoxEditable="1"
          textBoxWidth="40" textBoxHeight="16" skewFactor="1" needsCallback="1"/>
</JUCER_COMPONENT>

END_JUCER_METADATA
*/
#endif

//==============================================================================
// Binary resources - be careful not to edit any of these sections!

// JUCER_RESOURCE: guibackground_png, 4372, "../Resources/GUIBackground.png"
static const unsigned char resource_GUIComponent_guibackground_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,200,0,0,0,250,8,3,0,0,0,211,52,248,10,0,0,0,1,115,82,71,66,0,174,206,28,233,
0,0,0,4,103,65,77,65,0,0,177,143,11,252,97,5,0,0,3,0,80,76,84,69,42,31,45,43,32,45,47,34,47,52,39,50,54,40,51,57,41,53,57,42,52,59,44,53,59,46,55,61,46,55,60,48,56,60,50,58,61,54,59,61,56,61,61,58,64,
62,61,65,62,63,67,62,64,64,63,64,67,63,65,68,63,69,70,63,71,71,68,55,63,71,59,67,64,73,73,64,76,76,66,78,77,76,75,75,77,76,76,77,77,77,78,78,78,79,79,79,65,83,75,66,80,79,66,82,79,66,82,80,67,86,82,67,
88,84,68,90,86,68,92,88,68,95,89,80,80,80,82,82,82,84,84,84,86,85,86,86,86,86,90,90,90,91,91,91,92,91,91,93,93,93,94,94,94,95,95,95,66,99,85,69,97,91,69,101,93,70,103,94,69,113,92,70,105,96,71,107,98,
70,108,98,71,110,100,71,112,101,71,114,103,70,125,99,73,117,105,73,120,106,74,122,109,74,124,110,74,126,111,99,93,97,96,95,96,100,95,98,102,96,99,103,97,100,100,100,100,101,101,101,104,99,102,105,100,
103,106,101,104,106,102,105,108,103,106,104,104,104,108,104,106,109,105,107,111,108,110,110,110,110,112,112,112,113,113,113,114,114,114,115,115,115,116,116,116,118,118,118,119,119,119,120,120,120,121,
121,121,122,121,122,122,122,122,123,123,123,124,123,123,124,124,124,126,125,125,126,126,126,127,127,127,72,136,106,75,129,114,75,132,115,75,134,116,76,136,119,76,138,120,77,141,122,78,143,123,73,146,111,
77,146,125,78,148,127,74,155,117,76,163,122,77,171,127,79,149,128,78,151,129,79,153,131,80,155,132,80,158,135,78,179,131,79,189,137,81,161,136,81,163,138,81,164,137,81,166,140,82,168,141,82,170,143,83,
173,145,83,175,146,83,178,149,84,176,147,85,181,150,84,183,152,85,184,152,86,185,153,85,187,155,86,190,157,80,197,141,87,193,158,86,192,159,83,206,147,83,216,152,87,196,161,88,198,162,89,201,165,86,227,
159,135,94,104,128,128,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,156,141,38,229,0,0,0,9,112,72,89,115,0,0,14,195,0,0,14,195,1,199,111,168,100,0,0,0,25,116,69,88,116,83,111,102,116,119,97,114,101,0,112,97,105,110,
116,46,110,101,116,32,52,46,48,46,49,51,52,3,91,122,0,0,13,120,73,68,65,84,120,94,237,152,137,91,84,215,25,198,5,212,51,65,20,97,192,173,75,144,16,32,233,154,214,184,224,2,66,22,219,24,187,39,109,218,
164,109,168,33,18,199,5,17,1,17,50,6,197,97,135,59,189,127,111,191,239,220,151,25,224,157,3,7,156,36,195,211,243,123,30,103,206,220,223,253,238,156,247,158,229,14,238,11,4,2,190,84,85,215,28,216,83,212,
84,87,161,235,235,169,170,57,104,246,28,7,107,40,74,213,126,184,114,209,21,41,25,124,250,214,216,191,41,73,217,115,188,176,57,162,168,79,218,153,104,52,57,248,109,176,49,137,230,56,118,173,255,218,49,
216,151,102,20,57,162,46,155,73,227,148,29,116,120,67,146,26,99,222,189,25,199,241,205,247,113,210,203,34,17,178,246,221,152,86,105,183,218,131,229,165,208,225,26,132,16,170,100,157,199,241,231,255,248,
241,199,49,206,82,142,214,162,177,158,212,189,179,104,109,133,118,30,203,3,115,76,199,196,14,147,54,178,242,150,177,241,10,135,236,65,59,128,190,244,127,244,89,252,121,44,29,62,88,28,146,106,57,30,199,
253,63,250,237,77,27,228,212,157,58,121,189,180,250,142,126,216,196,96,54,37,175,71,206,126,117,231,84,114,160,52,218,41,59,12,201,154,215,15,26,78,145,128,242,42,9,94,172,63,212,87,108,122,242,247,55,
95,253,160,95,131,152,106,196,176,51,203,196,159,190,241,11,27,208,52,47,172,30,53,166,125,53,106,211,243,45,245,245,104,92,124,126,68,94,207,205,205,222,153,154,214,68,150,163,135,209,40,98,239,116,178,
196,177,68,146,25,38,253,205,174,245,127,148,15,9,222,179,48,142,63,250,217,15,126,174,29,46,206,173,3,242,233,250,103,127,144,57,247,161,220,237,231,209,136,166,89,153,180,231,43,245,179,152,79,109,115,
77,114,194,196,76,71,202,116,172,174,205,188,244,194,235,104,173,195,78,20,89,33,246,246,235,132,145,104,201,194,31,181,163,244,98,227,33,61,189,213,10,239,125,225,186,116,247,175,31,72,135,205,1,196,
72,130,152,227,55,226,27,199,101,17,76,204,69,39,204,225,233,201,213,147,122,212,242,8,119,63,61,219,46,39,76,78,202,204,75,141,74,218,132,9,187,172,55,99,231,138,24,237,156,126,214,143,22,221,142,147,
27,159,124,22,236,128,104,130,29,109,112,232,48,5,49,230,21,125,233,203,78,143,152,212,216,196,216,29,249,208,100,71,162,45,234,212,55,115,232,233,85,121,189,253,244,144,49,135,71,102,14,155,147,18,203,
152,183,215,77,193,13,232,50,239,74,102,206,250,181,98,71,75,103,221,186,67,107,105,119,20,4,29,46,17,68,121,45,215,43,3,210,243,188,115,37,109,76,109,206,174,189,44,38,217,157,71,242,82,23,117,152,218,
158,185,177,35,166,110,238,150,124,78,77,187,158,118,218,187,46,157,63,122,130,228,209,217,100,65,119,215,29,66,83,43,188,215,72,145,82,65,234,102,218,101,64,78,47,156,200,106,39,211,25,187,180,163,100,
131,186,60,173,155,89,199,74,170,249,249,106,143,180,78,222,78,54,183,102,149,27,232,178,183,87,103,80,151,222,126,189,27,58,211,180,247,114,36,89,227,27,14,37,153,85,148,156,166,219,80,42,200,200,189,
142,232,68,221,204,149,206,185,194,78,148,154,190,103,223,95,155,179,61,190,176,114,168,254,138,140,22,168,205,221,70,107,29,218,69,139,220,102,157,96,58,38,246,179,96,183,41,27,116,221,161,226,114,217,
193,131,164,64,137,32,231,86,234,71,199,76,102,42,149,45,62,67,206,233,36,147,189,42,151,44,148,250,200,174,140,53,46,47,232,160,109,194,110,190,138,116,209,182,229,198,235,248,8,18,77,90,201,125,47,30,
90,107,238,104,133,20,224,32,117,185,171,233,232,66,251,74,83,219,170,62,56,110,165,77,251,216,215,51,58,201,100,175,90,139,246,104,202,190,165,110,215,155,179,19,83,179,242,213,71,71,102,55,61,29,147,
33,41,60,71,236,125,182,107,91,15,97,178,173,63,148,60,102,10,75,102,135,112,144,119,166,107,47,175,212,207,92,49,99,58,155,46,77,167,58,103,46,13,70,118,64,110,141,173,61,255,210,43,23,244,173,55,107,
46,231,46,102,86,143,152,211,185,204,220,105,171,190,39,40,72,122,165,195,140,77,14,78,165,154,35,233,88,221,236,235,77,11,77,102,84,183,42,211,241,188,248,244,190,58,43,237,244,202,169,147,242,116,156,
186,103,14,231,190,108,223,205,18,45,31,20,228,145,140,242,236,215,43,77,230,214,180,124,234,125,100,70,250,204,105,187,36,210,185,19,122,194,161,65,221,184,106,159,203,116,122,148,49,19,61,230,117,217,
208,70,179,109,211,178,23,171,255,158,216,28,228,181,72,182,165,40,186,100,82,179,189,178,184,23,78,28,141,14,165,178,145,118,61,123,206,158,113,101,214,254,24,185,55,101,154,87,211,205,11,181,181,211,
171,181,233,232,233,72,218,92,254,202,158,224,73,20,221,71,171,44,108,14,50,161,203,238,170,116,185,93,30,137,166,111,210,116,60,149,167,68,78,14,14,98,113,102,147,173,118,98,196,124,245,200,156,155,52,
87,23,178,242,3,82,78,254,242,27,121,218,111,75,230,153,172,231,81,251,147,106,87,187,147,139,77,65,78,23,126,106,244,206,201,203,204,5,115,118,174,111,246,170,180,219,245,71,137,146,201,201,15,197,186,
204,194,169,212,236,219,178,212,251,114,87,102,228,113,217,123,113,234,158,79,14,108,202,157,102,80,95,202,200,166,32,35,133,21,251,240,169,60,182,23,234,204,145,185,185,142,218,220,149,35,201,2,17,78,
228,22,30,78,46,204,156,54,109,146,40,189,144,107,171,155,187,88,55,56,251,176,3,126,75,58,163,232,73,163,233,145,111,121,130,7,98,185,216,24,164,62,74,214,129,112,71,158,20,135,180,243,245,178,62,210,
71,71,245,247,72,66,221,185,222,43,237,178,15,215,233,150,172,127,65,166,215,254,80,217,30,121,230,97,134,190,136,178,157,217,232,133,142,74,99,70,30,51,139,217,30,157,110,61,217,104,209,158,209,39,83,
240,137,88,89,74,247,125,86,211,198,32,103,237,54,107,169,219,240,176,190,60,89,248,11,234,165,232,145,30,219,25,213,40,79,246,69,153,99,79,100,148,244,93,232,211,152,182,45,143,206,100,10,218,191,31,
37,101,241,46,58,217,188,216,75,211,60,43,127,46,150,5,185,207,246,254,202,205,95,236,210,52,122,104,209,102,232,52,247,117,226,73,214,140,124,124,214,213,42,79,127,77,254,162,181,177,49,41,222,10,175,
32,107,59,111,25,104,148,181,161,63,72,164,227,178,105,105,83,126,201,12,98,201,200,180,146,46,107,16,12,210,125,61,207,239,39,164,87,144,91,15,209,40,7,93,210,201,78,233,248,162,93,250,131,58,137,164,
247,139,58,54,54,162,30,148,127,50,18,79,36,170,100,67,221,54,248,4,105,155,41,235,35,219,222,100,89,235,246,103,165,253,91,197,206,180,76,146,75,131,181,234,170,79,78,182,1,125,240,8,82,251,77,217,126,
13,14,222,239,52,141,178,76,58,101,117,200,222,36,125,182,147,170,179,213,46,104,155,75,158,47,79,116,137,63,107,108,236,179,13,236,114,219,225,17,164,73,255,72,47,15,120,28,142,234,26,150,91,254,44,122,
134,95,251,18,206,254,65,108,219,50,211,100,152,132,12,206,243,193,107,141,148,141,158,39,178,64,158,201,252,145,233,101,255,36,212,31,68,247,163,197,65,249,220,168,219,151,172,140,140,110,81,141,163,
139,246,135,76,114,158,15,223,109,144,173,73,114,237,146,10,10,34,43,92,198,106,183,84,80,16,89,230,187,249,95,7,80,65,65,236,30,182,107,42,105,141,188,20,33,72,165,241,255,17,228,191,14,160,55,1,73,64,
123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,
48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,
7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,
128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,
13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,
222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,
12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,
194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,
160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,
50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,
4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,
3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,
16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,
8,104,7,33,8,3,73,64,123,131,50,2,218,65,8,194,64,18,208,222,160,140,128,118,16,130,48,144,4,180,55,40,35,160,29,132,32,12,36,1,237,13,202,8,104,7,33,8,3,73,64,123,131,50,2,218,193,150,65,246,18,33,72,
165,17,130,84,26,33,72,165,17,130,84,26,33,72,165,17,130,84,26,33,72,165,17,130,84,26,33,72,165,17,130,84,26,33,72,165,225,31,100,40,63,140,214,227,252,99,180,74,240,56,63,128,86,62,63,132,214,119,193,
22,65,30,231,243,249,51,218,24,151,134,253,104,15,151,14,210,48,52,159,207,47,143,107,247,215,228,110,130,232,119,230,151,135,91,240,113,7,108,19,228,129,188,55,232,197,141,185,187,229,136,72,140,228,
180,241,151,26,17,27,68,162,52,224,115,145,150,7,243,91,94,110,203,32,243,249,37,121,31,200,47,21,6,195,82,34,200,249,124,126,188,193,156,145,17,41,178,187,32,143,77,195,112,62,127,23,159,139,200,55,236,
62,136,92,177,91,111,182,204,45,116,191,69,154,15,28,65,146,150,253,190,243,243,249,229,1,219,58,35,5,243,118,130,122,97,47,109,251,220,45,131,179,52,36,35,163,87,88,30,24,178,35,117,30,167,149,96,115,
144,99,215,250,175,29,179,45,185,232,208,184,76,167,22,185,222,90,144,6,25,27,185,44,7,105,88,150,175,29,208,9,161,157,56,147,156,165,45,121,149,166,247,156,95,27,145,110,185,13,138,124,178,87,24,218,
105,144,119,251,63,139,227,155,239,91,37,23,29,200,47,203,218,120,80,8,114,87,7,93,110,24,5,49,103,52,226,178,140,159,118,127,60,191,124,94,118,57,219,154,111,104,24,183,75,205,11,172,145,121,179,156,
159,111,209,75,116,203,183,217,121,230,152,90,199,174,255,231,186,189,241,155,130,196,159,252,240,211,207,227,88,155,218,115,89,231,221,243,249,51,133,32,227,118,209,104,139,209,185,144,111,177,65,150,
237,190,144,180,44,165,206,47,137,13,50,63,212,32,99,170,123,134,92,194,142,181,76,177,210,65,174,125,17,247,127,252,197,111,164,85,12,82,163,34,142,127,245,86,92,12,98,134,101,125,44,233,157,73,62,202,
250,23,49,239,232,152,29,47,253,62,187,219,201,77,208,150,101,7,65,146,83,37,136,140,174,189,88,203,176,68,153,119,4,137,227,127,190,247,83,219,223,26,196,216,183,175,58,17,159,188,249,203,47,138,65,186,
165,23,15,138,65,164,49,32,187,24,119,236,252,3,89,208,214,234,247,61,206,47,159,145,123,32,45,153,90,59,122,38,172,5,41,76,45,187,79,200,165,100,169,150,154,160,113,252,231,87,255,102,131,84,35,198,190,
125,85,7,229,227,245,56,254,247,79,110,126,104,79,178,23,149,187,97,47,152,124,108,177,83,165,196,98,151,251,165,44,53,216,32,26,63,89,236,56,142,179,182,167,16,4,139,125,24,87,144,137,160,95,77,139,61,
142,255,242,198,191,52,200,193,42,196,16,236,220,58,126,35,190,113,220,158,147,92,116,88,175,81,8,162,251,234,210,64,225,219,138,180,140,203,247,44,13,203,182,101,103,192,221,37,217,115,109,235,188,110,
158,27,30,47,91,82,188,180,172,77,89,27,50,201,244,93,47,220,45,219,9,5,249,93,252,214,175,227,248,247,235,103,150,12,201,126,235,94,177,175,123,133,227,127,188,249,39,185,241,251,215,13,72,33,201,30,
67,111,252,198,28,123,53,9,231,144,36,53,186,226,247,24,7,107,40,135,80,85,93,115,96,79,81,83,93,42,70,32,16,40,193,190,125,255,3,80,16,205,172,44,160,0,64,0,0,0,0,73,69,78,68,174,66,96,130,0,0};

const char* GUIComponent::guibackground_png = (const char*) resource_GUIComponent_guibackground_png;
const int GUIComponent::guibackground_pngSize = 4372;

// JUCER_RESOURCE: faderBackground_png, 456, "../Resources/FaderBackground.png"
static const unsigned char resource_GUIComponent_faderBackground_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,36,0,0,0,166,8,6,0,0,0,178,120,45,75,0,0,0,1,115,82,71,66,0,174,206,28,233,
0,0,0,4,103,65,77,65,0,0,177,143,11,252,97,5,0,0,0,9,112,72,89,115,0,0,14,195,0,0,14,195,1,199,111,168,100,0,0,0,25,116,69,88,116,83,111,102,116,119,97,114,101,0,112,97,105,110,116,46,110,101,116,32,52,
46,48,46,49,51,52,3,91,122,0,0,1,56,73,68,65,84,120,94,237,206,49,74,67,65,20,70,225,44,79,12,182,138,75,72,97,45,100,3,214,110,192,136,224,98,92,128,157,157,11,25,81,187,59,255,229,52,47,76,138,83,124,
60,248,31,204,61,187,49,198,69,137,227,74,113,92,105,26,110,191,79,227,28,234,157,206,52,164,199,182,80,239,116,166,33,61,22,125,189,142,187,207,183,191,111,252,95,212,59,157,105,72,143,37,191,49,247,
31,239,255,81,225,127,85,239,116,166,33,61,86,237,95,30,199,205,243,241,114,130,174,158,14,227,250,248,96,80,203,32,98,16,49,136,24,68,12,34,6,17,131,136,65,196,32,98,16,49,136,24,68,12,34,6,17,131,136,
65,196,32,98,16,49,136,24,68,12,34,6,17,131,136,65,196,32,98,16,49,136,24,68,12,34,6,17,131,136,65,196,32,98,16,49,136,24,68,12,34,6,17,131,136,65,196,32,98,16,49,136,24,68,12,34,6,17,131,136,65,196,32,
98,16,49,136,24,68,12,34,6,17,131,136,65,196,32,98,16,49,136,24,68,12,34,6,17,131,136,65,196,32,98,16,49,136,24,68,12,34,6,17,131,136,65,196,32,98,208,57,212,59,157,105,72,143,109,161,222,233,76,67,122,
108,11,245,78,103,26,210,99,91,168,119,58,113,92,41,142,43,197,113,165,56,174,51,118,63,99,216,237,225,217,47,69,96,0,0,0,0,73,69,78,68,174,66,96,130,0,0};

const char* GUIComponent::faderBackground_png = (const char*) resource_GUIComponent_faderBackground_png;
const int GUIComponent::faderBackground_pngSize = 456;

// JUCER_RESOURCE: faderHandle_png, 256, "../Resources/FaderHandle.png"
static const unsigned char resource_GUIComponent_faderHandle_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,30,0,0,0,24,8,6,0,0,0,237,105,77,191,0,0,0,1,115,82,71,66,0,174,206,28,233,0,
0,0,4,103,65,77,65,0,0,177,143,11,252,97,5,0,0,0,9,112,72,89,115,0,0,14,195,0,0,14,195,1,199,111,168,100,0,0,0,25,116,69,88,116,83,111,102,116,119,97,114,101,0,112,97,105,110,116,46,110,101,116,32,52,
46,48,46,49,51,52,3,91,122,0,0,0,112,73,68,65,84,72,75,237,207,177,9,128,48,20,132,225,140,150,53,172,178,128,27,136,16,36,141,173,51,232,48,78,117,233,108,114,66,138,188,123,77,138,15,30,215,252,188,
0,192,5,29,21,232,168,64,71,5,58,42,124,71,206,25,10,51,60,195,102,126,195,123,57,176,222,215,80,93,225,237,44,88,222,103,168,174,176,219,199,214,102,216,47,156,82,130,66,19,142,49,66,161,9,171,209,81,
129,142,10,116,180,135,80,1,12,150,149,98,160,197,193,215,0,0,0,0,73,69,78,68,174,66,96,130,0,0};

const char* GUIComponent::faderHandle_png = (const char*) resource_GUIComponent_faderHandle_png;
const int GUIComponent::faderHandle_pngSize = 256;


//[EndFile] You can add extra defines here...
//[/EndFile]
